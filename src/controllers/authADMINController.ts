/**
 * Service PortalLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { ApiResponse, RequestOptions } from '../core';
import {
  CreateUserRequest,
  createUserRequestSchema,
} from '../models/createUserRequest';
import { LoginRequest, loginRequestSchema } from '../models/loginRequest';
import {
  UserCreateTestCopyRequest,
  userCreateTestCopyRequestSchema,
} from '../models/userCreateTestCopyRequest';
import { BaseController } from './baseController';

export class AuthADMINController extends BaseController {
  /**
   * @param body
   * @return Response from the API call
   */
  async createUser(
    body: CreateUserRequest,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<void>> {
    const req = this.createRequest('POST', '/users/add');
    req.baseUrl('Server 2');
    const mapped = req.prepareArgs({ body: [body, createUserRequestSchema] });
    req.header('Content-Type', 'application/json');
    req.json(mapped.body);
    req.authenticate([{ bearer: true }]);
    return req.call(requestOptions);
  }

  /**
   * @param body
   * @return Response from the API call
   */
  async userCreateTestCopy(
    body: UserCreateTestCopyRequest,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<void>> {
    const req = this.createRequest('POST', '/users');
    req.baseUrl('Server 1');
    const mapped = req.prepareArgs({
      body: [body, userCreateTestCopyRequestSchema],
    });
    req.header('Content-Type', 'application/json');
    req.json(mapped.body);
    req.authenticate([{ bearer: true }]);
    return req.call(requestOptions);
  }

  /**
   * @param body
   * @return Response from the API call
   */
  async login(
    body: LoginRequest,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<void>> {
    const req = this.createRequest('POST', '/auth/login');
    req.baseUrl('Server 2');
    const mapped = req.prepareArgs({ body: [body, loginRequestSchema] });
    req.json(mapped.body);
    req.authenticate([]);
    return req.call(requestOptions);
  }
}
