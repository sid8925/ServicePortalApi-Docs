/**
 * Service PortalLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { ApiResponse, FileWrapper, RequestOptions } from '../core';
import { string } from '../schema';
import { BaseController } from './baseController';

export class SliderController extends BaseController {
  /**
   * @return Response from the API call
   */
  async sliderList(
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<void>> {
    const req = this.createRequest('GET', '/slider/website');
    req.baseUrl('Server 2');
    req.authenticate([]);
    return req.call(requestOptions);
  }

  /**
   * @param title
   * @param image
   * @param body
   * @param route
   * @param slidefor
   * @return Response from the API call
   */
  async addSlider(
    title: string,
    image: FileWrapper,
    body: string,
    route: string,
    slidefor: string,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<void>> {
    const req = this.createRequest('POST', '/slider/add');
    req.baseUrl('Server 2');
    const mapped = req.prepareArgs({
      title: [title, string()],
      body: [body, string()],
      route: [route, string()],
      slidefor: [slidefor, string()],
    });
    req.formData({
      title: mapped.title,
      image: image,
      body: mapped.body,
      route: mapped.route,
      slidefor: mapped.slidefor,
    });
    req.authenticate([]);
    return req.call(requestOptions);
  }

  /**
   * @return Response from the API call
   */
  async deleteSlider(
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<void>> {
    const req = this.createRequest(
      'DELETE',
      '/slider/delete/668bbf79c3774af69499a7e0'
    );
    req.baseUrl('Server 2');
    req.authenticate([]);
    return req.call(requestOptions);
  }
}
